page_content='

# Table: `gnuhealth_patient_pregnancy`

This table stores **pregnancy records** for patients in the GNU Health system. It includes clinical information and metadata for each pregnancy entry.

---

## Primary Key

* `id` (`INTEGER`): Auto-incrementing unique identifier for each pregnancy record.

---

## Audit Fields

* `create_date` (`TIMESTAMP(6)`): Date and time when the record was created.
* `write_date` (`TIMESTAMP(6)`): Date and time when the record was last updated.
* `create_uid` (`INTEGER`): ID of the user who created the record.
* `write_uid` (`INTEGER`): ID of the user who last updated the record.

---

## Clinical Fields

* `gravida` (`INTEGER`): Total number of times the patient has been pregnant.
* `fetuses` (`INTEGER`): Number of fetuses in this specific pregnancy.
* `lmp` (`DATE`): Last Menstrual Period, used for calculating gestational age.
* `pregnancy_end_result` (`VARCHAR`): Outcome of the pregnancy (e.g., live birth, miscarriage).
* `pregnancy_end_date` (`TIMESTAMP(0)`): Date when the pregnancy ended.
* `iugr` (`VARCHAR`): Indicates whether Intrauterine Growth Restriction (IUGR) is present.
* `monozygotic` (`BOOLEAN`, default `FALSE`): True if the pregnancy involves monozygotic (identical) twins.
* `current_pregnancy` (`BOOLEAN`, default `FALSE`): True if this is the patient's current pregnancy.
* `warning` (`BOOLEAN`, default `FALSE`): True if there are complications or warnings related to the pregnancy.
* `reverse_weeks` (`INTEGER`): Tracks gestational weeks in reverse (possibly for countdown).
* `bba` (`BOOLEAN`, default `FALSE`): True if the birth occurred before arrival at a healthcare facility.
* `home_birth` (`BOOLEAN`, default `FALSE`): True if the birth occurred at home.
* `reverse` (`BOOLEAN`, default `FALSE`): A flag for internal logic (purpose not fully defined).

---

## Relationship Fields

* `name` (`INTEGER`): Foreign key to `gnuhealth_patient(id)`, identifies the patient.
* `healthprof` (`INTEGER`): Foreign key to `gnuhealth_healthprofessional(id)`, identifies the health professional.
* `institution` (`INTEGER`): Foreign key to `gnuhealth_institution(id)`, identifies the healthcare institution.

---

## Foreign Key Constraints

```sql
CONSTRAINT fk_pregnancy_patient FOREIGN KEY (name)
  REFERENCES gnuhealth_patient(id) ON DELETE SET NULL ON UPDATE NO ACTION,

CONSTRAINT fk_pregnancy_healthprof FOREIGN KEY (healthprof)
  REFERENCES gnuhealth_healthprofessional(id) ON DELETE SET NULL ON UPDATE NO ACTION,

CONSTRAINT fk_pregnancy_institution FOREIGN KEY (institution)
  REFERENCES gnuhealth_institution(id) ON DELETE SET NULL ON UPDATE NO ACTION
```

---

## Example Query: Retrieve Names of Pregnant Patients

Returns patient names by joining pregnancy records with patient and party data.

```sql
SELECT party_party.name
FROM gnuhealth_patient_pregnancy
INNER JOIN gnuhealth_patient
  ON gnuhealth_patient.id = gnuhealth_patient_pregnancy.name
INNER JOIN party_party
  ON party_party.id = gnuhealth_patient.name;
```

* `party_party.name` provides the readable name of each patient.
* `gnuhealth_patient.name` links the patient to their corresponding party entity.

---

## Use Case Summary

* Tracks individual pregnancy details including clinical flags and pregnancy outcomes.
* Supports linking to healthcare professionals and institutions.
* Enables queries on patient status, gestational data, and metadata fields.
* Boolean flags support conditional logic and health alert workflows.

---

' metadata={'category': 'pregnancy'}
page_content='

# Table: `gnuhealth_patient`

This table stores **comprehensive patient records** in GNU Health, including medical, lifestyle, socioeconomic, and demographic information.

---

## Primary Key

* `id` (`INTEGER`): Auto-incrementing unique identifier for the patient.

---

## Audit Fields

* `create_date` (`TIMESTAMP(6)`): Timestamp of record creation.
* `write_date` (`TIMESTAMP(6)`): Timestamp of last record update.
* `create_uid` (`INTEGER`): ID of the user who created the record.
* `write_uid` (`INTEGER`): ID of the user who last updated the record.

---

## General and Administrative Information

* `name` (`INTEGER`, `UNIQUE`): Foreign key to `party_party(id)` (represents the person).
* `family` (`INTEGER`): Foreign key to `gnuhealth_family(id)` (family unit).
* `primary_care_doctor` (`INTEGER`): Foreign key to `gnuhealth_healthprofessional(id)`.
* `current_address` (`INTEGER`): Foreign key to `party_address(id)`.
* `dob` (`TIMESTAMP(0)`): Date of death (misnamed field; likely intended as “Date of Birth”).
* `cod` (`INTEGER`): Foreign key to `gnuhealth_pathology(id)` for cause of death.
* `deceased` (`BOOLEAN`, default `FALSE`): Indicates if the patient is deceased.
* `active` (`BOOLEAN`, default `FALSE`): Indicates if the patient record is active.
* `general_info` (`TEXT`): General notes about the patient.
* `critical_info` (`TEXT`): Critical medical information (not automatically summarized).

---

## Socioeconomic Information

* Boolean flags indicating social risk factors:

  * `works_at_home`, `prison_current`, `prison_past`, `domestic_violence`, `hostile_area`, `sexual_abuse`, `drug_addiction`, `school_withdrawal`, `single_parent`, `working_children`, `teenage_pregnancy`, `relative_in_prison`
* `income` (`VARCHAR`): Reported income level.
* `ses_notes` (`TEXT`): Additional socioeconomic context.

---

## Gynecological and Obstetric History

* `fertile`, `menopausal` (`BOOLEAN`): Reproductive status.
* `menopause`, `menarche` (`INTEGER`): Age of menopause/menarche onset.
* Pregnancy history:

  * `gravida`, `full_term`, `premature`, `abortions`, `stillbirths` (`INTEGER`)
* Screening:

  * `pap_test`, `colposcopy`, `mammography`, `breast_self_examination` (`BOOLEAN`)
  * `pap_test_last`, `colposcopy_last`, `mammography_last` (`DATE`)

---

## Lifestyle and Habits

### Tobacco

* `smoking`, `ex_smoker`, `second_hand_smoker` (`BOOLEAN`)
* `smoking_number`, `age_start_smoking`, `age_quit_smoking` (`INTEGER`)

### Alcohol

* `alcohol`, `ex_alcoholic` (`BOOLEAN`)
* `age_start_drinking`, `age_quit_drinking`, `alcohol_beer_number`, `alcohol_wine_number`, `alcohol_liquor_number` (`INTEGER`)

### Drugs

* `drug_usage`, `ex_drug_addict`, `drug_iv` (`BOOLEAN`)
* `age_start_drugs`, `age_quit_drugs` (`INTEGER`)

### Other

* `exercise`, `exercise_minutes_day` (`BOOLEAN`, `INTEGER`)
* `sleep_hours` (`INTEGER`), `sleep_during_daytime` (`BOOLEAN`)
* `lifestyle_info` (`TEXT`)
* `hours_outside` (`INTEGER`): Time spent outdoors

---

## Diet and Nutrition

* `diet` (`BOOLEAN`): Indicates if the patient is on a diet.
* `diet_info` (`VARCHAR`): Description of the diet.
* `number_of_meals` (`INTEGER`): Meals per day.
* `eats_alone`, `soft_drinks`, `coffee`, `salt` (`BOOLEAN`)
* `coffee_cups` (`INTEGER`)
* `diet_belief` (`INTEGER`): Foreign key to `gnuhealth_diet_belief(id)`
* `vegetarian_type` (`INTEGER`): Foreign key to `gnuhealth_vegetarian_types(id)`

---

## Sexual Health

* `first_sexual_encounter`, `sexual_partners_number` (`INTEGER`)
* `sexual_partners`, `sexual_preferences`, `sexual_practices` (`VARCHAR`)
* `sex_oral`, `sex_anal` (`VARCHAR`)
* `sex_with_prostitutes`, `prostitute` (`BOOLEAN`)
* `anticonceptive` (`VARCHAR`)
* `sexuality_info` (`TEXT`)

---

## Safety and Other Information

* `home_safety`, `car_seat_belt`, `car_child_safety`, `car_revision`, `motorcycle_rider`, `helmet`, `traffic_laws` (`BOOLEAN`)
* `disability`, `amputee` (`BOOLEAN`)
* `amputee_since` (`DATE`)
* `current_insurance` (`INTEGER`): Foreign key to `gnuhealth_insurance(id)`
* `blood_type`, `rh`, `biological_sex` (`VARCHAR`)

---

## Uncategorized / Legacy Fields

* `hb` (`VARCHAR`)
* `uxo` (`BOOLEAN`): Possible exposure to unexploded ordnance
* `crit_allergic`, `crit_cancer`, `crit_cardio`, `crit_cognitive`, `crit_dbt`, `crit_hbp`, `crit_immuno`, `crit_nutrition`, `crit_social` (`BOOLEAN`): Critical health flags

---

## Foreign Key Constraints

```sql
CONSTRAINT fk_patient_party FOREIGN KEY (name)
  REFERENCES party_party(id) ON DELETE RESTRICT ON UPDATE NO ACTION,

CONSTRAINT fk_patient_family FOREIGN KEY (family)
  REFERENCES gnuhealth_family(id) ON DELETE SET NULL ON UPDATE NO ACTION,

CONSTRAINT fk_patient_doctor FOREIGN KEY (primary_care_doctor)
  REFERENCES gnuhealth_healthprofessional(id) ON DELETE SET NULL ON UPDATE NO ACTION,

CONSTRAINT fk_patient_address FOREIGN KEY (current_address)
  REFERENCES party_address(id) ON DELETE SET NULL ON UPDATE NO ACTION,

CONSTRAINT fk_patient_insurance FOREIGN KEY (current_insurance)
  REFERENCES gnuhealth_insurance(id) ON DELETE SET NULL ON UPDATE NO ACTION,

CONSTRAINT fk_patient_cod FOREIGN KEY (cod)
  REFERENCES gnuhealth_pathology(id) ON DELETE SET NULL ON UPDATE NO ACTION,

CONSTRAINT fk_patient_diet_belief FOREIGN KEY (diet_belief)
  REFERENCES gnuhealth_diet_belief(id) ON DELETE SET NULL ON UPDATE NO ACTION,

CONSTRAINT fk_patient_veg_type FOREIGN KEY (vegetarian_type)
  REFERENCES gnuhealth_vegetarian_types(id) ON DELETE SET NULL ON UPDATE NO ACTION
```

---

## Use Case Summary

* Core patient table in GNU Health EHR.
* Captures complete clinical, lifestyle, reproductive, and safety profiles.
* Integrates with demographic, professional, and insurance records.
* Designed for longitudinal tracking of health and social determinants.
* Supports advanced querying for medical decision support and research.

---

' metadata={'category': 'patient'}
